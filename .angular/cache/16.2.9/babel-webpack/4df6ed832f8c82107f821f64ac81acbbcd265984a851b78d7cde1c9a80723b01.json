{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let DataService = /*#__PURE__*/(() => {\n  class DataService {\n    constructor() {\n      this.dataSubject = new BehaviorSubject(null);\n      this.data$ = this.dataSubject.asObservable();\n      this.loggedInUsernameSource = new BehaviorSubject('');\n      this.currentLoggedInUsername = this.loggedInUsernameSource.asObservable();\n      const storedData = localStorage.getItem('myData');\n      const storedImage = localStorage.getItem('storedImage');\n      if (storedData) {\n        this.dataSubject.next(storedData);\n      }\n      if (storedImage) {\n        this.dataSubject.next;\n      }\n    }\n    setData1(username) {\n      this.loggedInUsernameSource.next(username);\n    }\n    setData(newData) {\n      this.dataSubject.next(newData);\n      // Store data in local storage\n      localStorage.setItem('myData', newData);\n    }\n    setData2(storedImage) {\n      this.dataSubject.next(storedImage);\n      // Store data in local storage\n      localStorage.setItem('storedImage', storedImage);\n    }\n    triggerLogedUser() {\n      this.dataSubject.next(this.dataSubject.value); // You can use any value here\n    }\n\n    isLoggedIn() {\n      return !!localStorage.getItem('myData');\n    }\n    static #_ = this.ɵfac = function DataService_Factory(t) {\n      return new (t || DataService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DataService,\n      factory: DataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return DataService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}