{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrderService } from '../order.service';\nimport { ProductService } from '../product.service';\nimport { Order } from './order';\nexport let NeworderComponent = class NeworderComponent {\n  constructor(orderservice, productService, router, route, dataServi) {\n    this.orderservice = orderservice;\n    this.productService = productService;\n    this.router = router;\n    this.route = route;\n    this.orderObj = new Order();\n    this.productPrice = 0;\n    this.totalOrderPrice = 0;\n    this.dataService.currentLoggedInUsername.subscribe(username => {\n      this.orderObj.customerusername = username;\n      console.log('Username:', this.orderObj.customerusername);\n    });\n  }\n  getProductPrice() {\n    const productId = this.orderObj.productid;\n    this.productService.getProductPrice(productId).subscribe(price => {\n      console.log('Product Price:', price);\n      this.productPrice = price;\n    }, error => {\n      console.log('Error fetching product price:', error);\n    });\n  }\n  calculateTotalPrice() {\n    const quantity = this.orderObj.qty;\n    if (this.productPrice && quantity) {\n      this.totalOrderPrice = this.productPrice * quantity;\n      console.log('Total Price:', this.totalOrderPrice);\n    }\n  }\n  placeOrder() {\n    // Calculate total price before placing the order\n    this.calculateTotalPrice();\n    // Include total price in the order object\n    this.orderObj.orderprice = this.totalOrderPrice;\n    // Call your order service with the order object\n    this.orderservice.addOrder(this.orderObj).subscribe(data => console.log(data), error => console.log(error));\n    alert(\"Order Placed\");\n    this.router.navigate(['/orders']);\n  }\n};\nNeworderComponent = __decorate([Component({\n  selector: 'neworder',\n  templateUrl: './neworder.component.html',\n  styleUrls: ['./neworder.component.css']\n}), __metadata(\"design:paramtypes\", [OrderService, ProductService, Router, ActivatedRoute, Object])], NeworderComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}