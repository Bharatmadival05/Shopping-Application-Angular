{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CustomerService } from '../customer.service';\nimport { DataService } from '../data.service';\nimport { Customer } from './customer';\nimport { Customers } from './customers';\nexport let CurrentcustomerComponent = class CurrentcustomerComponent {\n  constructor(dataService, customerService) {\n    this.dataService = dataService;\n    this.customerService = customerService;\n    this.custobj = new Customers();\n    this.customerObj = new Customer();\n    this.showEditForm = false;\n    this.custimgStringVariable = '';\n  }\n  ngOnInit() {\n    this.dataService.data$.subscribe(newData => {\n      this.logedInUsername = newData;\n      console.log(\"Welcome \" + this.logedInUsername);\n      this.logedUser();\n    });\n  }\n  logedUser() {\n    // Ensure this method is called when the loggedInUsername changes\n    console.log('Data:', this.logedInUsername); // Log the value of this.data\n    if (this.logedInUsername !== null && this.logedInUsername !== undefined) {\n      this.currentcustomer = this.customerService.currentCustomer(this.logedInUsername);\n      this.currentcustomer.subscribe(customerData => {\n        console.log('Backend customer:', customerData);\n        if (customerData && customerData.custimgString) {\n          this.custimgStringVariable = customerData.custimgString;\n        }\n      });\n    } else {\n      // Handle the case where data is null (e.g., after logout)\n      this.currentcustomer = null;\n    }\n  }\n  getBackgroundStyle() {\n    // Define the background style based on the value of custimgStringVariable\n    const backgroundStyle = {\n      'background-image': this.custimgStringVariable ? `url('${this.custimgStringVariable}')` : 'none',\n      'background-size': 'cover'\n      // Add more styles as needed\n    };\n\n    return backgroundStyle;\n  }\n  updateUser() {\n    this.customerService.updateCustomer(this.custobj).subscribe(data => {\n      console.log(\"Customer updated successfully:\", data);\n      alert(\"Customer Updated\");\n    }, error => {\n      console.log(\"Error during updation:\", error);\n      alert(\"Error during updation\");\n    });\n  }\n  toggleEditForm() {\n    this.showEditForm = !this.showEditForm;\n  }\n  onImageChange(event) {\n    this.selectedImage = event.target.files[0];\n    this.encodeImageToBase64();\n  }\n  encodeImageToBase64() {\n    if (this.selectedImage) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        this.custobj.custimgString = event.target.result;\n      };\n      reader.readAsDataURL(this.selectedImage);\n    }\n  }\n};\nCurrentcustomerComponent = __decorate([Component({\n  selector: 'currentcustomer',\n  templateUrl: './currentcustomer.component.html',\n  styleUrls: ['./currentcustomer.component.css']\n}), __metadata(\"design:paramtypes\", [DataService, CustomerService])], CurrentcustomerComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}