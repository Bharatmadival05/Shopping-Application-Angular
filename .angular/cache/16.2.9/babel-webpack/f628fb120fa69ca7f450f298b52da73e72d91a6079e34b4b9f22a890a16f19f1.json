{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CustomerService } from '../customer.service';\nimport { DataService } from '../data.service';\nimport { Customer } from './customer';\nimport { Customers } from './customers';\nexport let CurrentcustomerComponent = class CurrentcustomerComponent {\n  constructor(dataService, customerService) {\n    this.dataService = dataService;\n    this.customerService = customerService;\n    this.custobj = new Customers();\n    this.customerObj = new Customer();\n    this.showEditForm = false;\n    this.custimgStringVariable = '';\n  }\n  ngOnInit() {\n    this.dataService.data$.subscribe(newData => {\n      this.logedInUsername = newData;\n      console.log(\"Welcome \" + this.logedInUsername);\n      this.logedUser();\n    });\n  }\n  logedUser() {\n    // Ensure this method is called when the loggedInUsername changes\n    console.log('Data:', this.logedInUsername); // Log the value of this.data\n    if (this.logedInUsername !== null && this.logedInUsername !== undefined) {\n      this.currentcustomer = this.customerService.currentCustomer(this.logedInUsername);\n      this.currentcustomer.subscribe(customerData => {\n        console.log('Backend customer:', customerData);\n        if (customerData && customerData.custimgString) {\n          this.custimgStringVariable = customerData.custimgString;\n          const [, format, base64] = this.custimgStringVariable.match(/^data:image\\/(\\w+);base64,(.+)$/);\n          const byteCharacters = atob(base64);\n          const byteNumbers = new Array(byteCharacters.length);\n          for (let i = 0; i < byteCharacters.length; i++) {\n            byteNumbers[i] = byteCharacters.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          const blob = new Blob([byteArray], {\n            type: `image/${format}`\n          });\n          // Create a File object from the Blob\n          this.imageFile = new File([blob], `image.${format}`, {\n            type: `image/${format}`\n          });\n          console.log(this.imageFile);\n          // Convert File object to data URL\n          this.fileToDataURL(this.imageFile).then(dataURL => {\n            this.imageDataURL = dataURL;\n          });\n        }\n      });\n    } else {\n      // Handle the case where data is null (e.g., after logout)\n      this.currentcustomer = null;\n    }\n  }\n  fileToDataURL(file) {\n    return new Promise(resolve => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        resolve(reader.result);\n      };\n      reader.readAsDataURL(file);\n    });\n  }\n  updateUser() {\n    this.customerService.updateCustomer(this.custobj).subscribe(data => {\n      console.log(\"Customer updated successfully:\", data);\n      alert(\"Customer Updated\");\n    }, error => {\n      console.log(\"Error during updation:\", error);\n      alert(\"Error during updation\");\n    });\n  }\n  toggleEditForm() {\n    this.showEditForm = !this.showEditForm;\n  }\n  onImageChange(event) {\n    this.selectedImage = event.target.files[0];\n    this.encodeImageToBase64();\n  }\n  encodeImageToBase64() {\n    if (this.selectedImage) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        this.custobj.custimgString = event.target.result;\n      };\n      reader.readAsDataURL(this.selectedImage);\n    }\n  }\n};\nCurrentcustomerComponent = __decorate([Component({\n  selector: 'currentcustomer',\n  templateUrl: './currentcustomer.component.html',\n  styleUrls: ['./currentcustomer.component.css']\n}), __metadata(\"design:paramtypes\", [DataService, CustomerService])], CurrentcustomerComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}